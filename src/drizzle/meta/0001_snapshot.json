{
<<<<<<< Updated upstream
  "id": "b29125c2-bfa9-4e27-a111-fad30531d7d6",
  "prevId": "65a9f8eb-cd4e-4a48-afc9-90bd2b2bc5d4",
=======
  "id": "89bf2ed3-915b-442d-8798-761c94ce0905",
  "prevId": "9a210793-ae06-4875-9463-cfe8f1984f78",
>>>>>>> Stashed changes
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.accounts": {
      "name": "accounts",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "providerAccountId": {
          "name": "providerAccountId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "expires_at": {
          "name": "expires_at",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "token_type": {
          "name": "token_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "session_state": {
          "name": "session_state",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "accounts_userId_user_id_fk": {
          "name": "accounts_userId_user_id_fk",
          "tableFrom": "accounts",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "accounts_provider_providerAccountId_pk": {
          "name": "accounts_provider_providerAccountId_pk",
          "columns": [
            "provider",
            "providerAccountId"
          ]
        }
      },
      "uniqueConstraints": {}
    },
    "public.address": {
      "name": "address",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "lat": {
          "name": "lat",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "lng": {
          "name": "lng",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "zip": {
          "name": "zip",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "postalAddress": {
          "name": "postalAddress",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "cntryCode": {
          "name": "cntryCode",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
<<<<<<< Updated upstream
          "default": "'2024-09-11 07:42:14.500'"
=======
          "default": "'2024-09-24 17:21:43.766'"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.allergies": {
      "name": "allergies",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ownerId": {
          "name": "ownerId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
<<<<<<< Updated upstream
          "default": "'2024-09-11 07:42:14.494'"
=======
          "default": "'2024-09-24 17:21:43.753'"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "allergies_ownerId_user_id_fk": {
          "name": "allergies_ownerId_user_id_fk",
          "tableFrom": "allergies",
          "tableTo": "user",
          "columnsFrom": [
            "ownerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.ask_estimate": {
      "name": "ask_estimate",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "askEstimateStatus",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'USER PENDING'"
        },
        "beginAt": {
          "name": "beginAt",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "endAt": {
          "name": "endAt",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "creator": {
          "name": "creator",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "for": {
          "name": "for",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "atHome": {
          "name": "atHome",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "new": {
          "name": "new",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
<<<<<<< Updated upstream
          "default": "'2024-09-11 07:42:14.467'"
=======
          "default": "'2024-09-24 17:21:43.674'"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "ask_estimate_creator_user_id_fk": {
          "name": "ask_estimate_creator_user_id_fk",
          "tableFrom": "ask_estimate",
          "tableTo": "user",
          "columnsFrom": [
            "creator"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "ask_estimate_for_company_id_fk": {
          "name": "ask_estimate_for_company_id_fk",
          "tableFrom": "ask_estimate",
          "tableTo": "company",
          "columnsFrom": [
            "for"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.ask_estimate_options": {
      "name": "ask_estimate_options",
      "schema": "",
      "columns": {
        "askEstimateId": {
          "name": "askEstimateId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "optionId": {
          "name": "optionId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "ask_estimate_options_askEstimateId_ask_estimate_id_fk": {
          "name": "ask_estimate_options_askEstimateId_ask_estimate_id_fk",
          "tableFrom": "ask_estimate_options",
          "tableTo": "ask_estimate",
          "columnsFrom": [
            "askEstimateId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "ask_estimate_options_optionId_options_id_fk": {
          "name": "ask_estimate_options_optionId_options_id_fk",
          "tableFrom": "ask_estimate_options",
          "tableTo": "options",
          "columnsFrom": [
            "optionId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.authenticator": {
      "name": "authenticator",
      "schema": "",
      "columns": {
        "credentialID": {
          "name": "credentialID",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "providerAccountId": {
          "name": "providerAccountId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "credentialPublicKey": {
          "name": "credentialPublicKey",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "counter": {
          "name": "counter",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "credentialDeviceType": {
          "name": "credentialDeviceType",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "credentialBackedUp": {
          "name": "credentialBackedUp",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "transports": {
          "name": "transports",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "authenticator_userId_user_id_fk": {
          "name": "authenticator_userId_user_id_fk",
          "tableFrom": "authenticator",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
<<<<<<< Updated upstream
      "compositePrimaryKeys": {},
=======
      "compositePrimaryKeys": {
        "authenticator_userId_credentialID_pk": {
          "name": "authenticator_userId_credentialID_pk",
          "columns": [
            "userId",
            "credentialID"
          ]
        }
      },
>>>>>>> Stashed changes
      "uniqueConstraints": {
        "authenticator_credentialID_unique": {
          "name": "authenticator_credentialID_unique",
          "nullsNotDistinct": false,
          "columns": [
            "credentialID"
          ]
        }
      }
    },
    "public.bg_jobs": {
      "name": "bg_jobs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "jobType": {
          "name": "jobType",
          "type": "jobType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'none'"
        },
        "from": {
          "name": "from",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "to": {
          "name": "to",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "dateToExecute": {
          "name": "dateToExecute",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "jobStatus",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'pending'"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
<<<<<<< Updated upstream
          "default": "'2024-09-11 07:42:14.490'"
=======
          "default": "'2024-09-24 17:21:43.736'"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "bg_jobs_from_company_id_fk": {
          "name": "bg_jobs_from_company_id_fk",
          "tableFrom": "bg_jobs",
          "tableTo": "company",
          "columnsFrom": [
            "from"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "bg_jobs_to_user_id_fk": {
          "name": "bg_jobs_to_user_id_fk",
          "tableFrom": "bg_jobs",
          "tableTo": "user",
          "columnsFrom": [
            "to"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.cancel_policies": {
      "name": "cancel_policies",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "daysBefore": {
          "name": "daysBefore",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "refundPercent": {
          "name": "refundPercent",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "companyId": {
          "name": "companyId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
<<<<<<< Updated upstream
          "default": "'2024-09-11 07:42:14.456'"
=======
          "default": "'2024-09-24 17:21:43.645'"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "cancel_policies_companyId_company_id_fk": {
          "name": "cancel_policies_companyId_company_id_fk",
          "tableFrom": "cancel_policies",
          "tableTo": "company",
          "columnsFrom": [
            "companyId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.category": {
      "name": "category",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ownerId": {
          "name": "ownerId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
<<<<<<< Updated upstream
          "default": "'2024-09-11 07:42:14.475'"
=======
          "default": "'2024-09-24 17:21:43.696'"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "category_ownerId_company_id_fk": {
          "name": "category_ownerId_company_id_fk",
          "tableFrom": "category",
          "tableTo": "company",
          "columnsFrom": [
            "ownerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
=======
    "public.company_membership": {
      "name": "company_membership",
      "schema": "",
      "columns": {
        "companyId": {
          "name": "companyId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "'2024-09-24 17:21:43.738'"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "company_membership_companyId_company_id_fk": {
          "name": "company_membership_companyId_company_id_fk",
          "tableFrom": "company_membership",
          "tableTo": "company",
          "columnsFrom": [
            "companyId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "company_membership_userId_user_id_fk": {
          "name": "company_membership_userId_user_id_fk",
          "tableFrom": "company_membership",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
>>>>>>> Stashed changes
    "public.company": {
      "name": "company",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "logo": {
          "name": "logo",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "coverImage": {
          "name": "coverImage",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "openAt": {
          "name": "openAt",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "closeAt": {
          "name": "closeAt",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
=======
        "stripeId": {
          "name": "stripeId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
>>>>>>> Stashed changes
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "ownerId": {
          "name": "ownerId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "atHome": {
          "name": "atHome",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
<<<<<<< Updated upstream
=======
        "plan": {
          "name": "plan",
          "type": "plan",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'NONE'"
        },
>>>>>>> Stashed changes
        "documentsId": {
          "name": "documentsId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "progressionId": {
          "name": "progressionId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "nac": {
          "name": "nac",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "locked": {
          "name": "locked",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "lang": {
          "name": "lang",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'fr'"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "company_address_company_address_id_fk": {
          "name": "company_address_company_address_id_fk",
          "tableFrom": "company",
          "tableTo": "company_address",
          "columnsFrom": [
            "address"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "company_ownerId_user_id_fk": {
          "name": "company_ownerId_user_id_fk",
          "tableFrom": "company",
          "tableTo": "user",
          "columnsFrom": [
            "ownerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "company_documentsId_company_documents_id_fk": {
          "name": "company_documentsId_company_documents_id_fk",
          "tableFrom": "company",
          "tableTo": "company_documents",
          "columnsFrom": [
            "documentsId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "company_progressionId_progression_id_fk": {
          "name": "company_progressionId_progression_id_fk",
          "tableFrom": "company",
          "tableTo": "progression",
          "columnsFrom": [
            "progressionId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "company_email_unique": {
          "name": "company_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      }
    },
    "public.company_address": {
      "name": "company_address",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "lat": {
          "name": "lat",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "lng": {
          "name": "lng",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "zip": {
          "name": "zip",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "postalAddress": {
          "name": "postalAddress",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "cntryCode": {
          "name": "cntryCode",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
<<<<<<< Updated upstream
          "default": "'2024-09-11 07:42:14.486'"
=======
          "default": "'2024-09-24 17:21:43.727'"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.company_certifications": {
      "name": "company_certifications",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "companyId": {
          "name": "companyId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
<<<<<<< Updated upstream
          "default": "'2024-09-11 07:42:14.459'"
=======
          "default": "'2024-09-24 17:21:43.657'"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "company_certifications_companyId_company_documents_id_fk": {
          "name": "company_certifications_companyId_company_documents_id_fk",
          "tableFrom": "company_certifications",
          "tableTo": "company_documents",
          "columnsFrom": [
            "companyId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.company_disponibilities": {
      "name": "company_disponibilities",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "beginAt": {
          "name": "beginAt",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "endAt": {
          "name": "endAt",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "companyId": {
          "name": "companyId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
<<<<<<< Updated upstream
          "default": "'2024-09-11 07:42:14.504'"
=======
          "default": "'2024-09-24 17:21:43.774'"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "company_disponibilities_companyId_company_id_fk": {
          "name": "company_disponibilities_companyId_company_id_fk",
          "tableFrom": "company_disponibilities",
          "tableTo": "company",
          "columnsFrom": [
            "companyId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.company_documents": {
      "name": "company_documents",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "siren": {
          "name": "siren",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "siret": {
          "name": "siret",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
<<<<<<< Updated upstream
          "default": "'2024-09-11 07:42:14.460'"
=======
          "default": "'2024-09-24 17:21:43.659'"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.deseases": {
      "name": "deseases",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "ownerId": {
          "name": "ownerId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "deseases_ownerId_user_id_fk": {
          "name": "deseases_ownerId_user_id_fk",
          "tableFrom": "deseases",
          "tableTo": "user",
          "columnsFrom": [
            "ownerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.employee_company": {
      "name": "employee_company",
      "schema": "",
      "columns": {
        "employeeId": {
          "name": "employeeId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "companyId": {
          "name": "companyId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
=======
    "public.intolerences": {
      "name": "intolerences",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ownerId": {
          "name": "ownerId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "'2024-09-24 17:21:43.758'"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
>>>>>>> Stashed changes
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "employee_company_employeeId_user_id_fk": {
          "name": "employee_company_employeeId_user_id_fk",
          "tableFrom": "employee_company",
          "tableTo": "user",
          "columnsFrom": [
            "employeeId"
=======
        "intolerences_ownerId_user_id_fk": {
          "name": "intolerences_ownerId_user_id_fk",
          "tableFrom": "intolerences",
          "tableTo": "user",
          "columnsFrom": [
            "ownerId"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
<<<<<<< Updated upstream
        },
        "employee_company_companyId_company_id_fk": {
          "name": "employee_company_companyId_company_id_fk",
          "tableFrom": "employee_company",
          "tableTo": "company",
          "columnsFrom": [
            "companyId"
=======
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.invoice": {
      "name": "invoice",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "total": {
          "name": "total",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "sessionId": {
          "name": "sessionId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "'2024-09-24 17:21:43.681'"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "invoice_sessionId_pro_session_id_fk": {
          "name": "invoice_sessionId_pro_session_id_fk",
          "tableFrom": "invoice",
          "tableTo": "pro_session",
          "columnsFrom": [
            "sessionId"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
<<<<<<< Updated upstream
      "compositePrimaryKeys": {
        "employee_company_companyId_employeeId_pk": {
          "name": "employee_company_companyId_employeeId_pk",
          "columns": [
            "companyId",
            "employeeId"
          ]
        }
      },
      "uniqueConstraints": {}
    },
    "public.session": {
      "name": "session",
      "schema": "",
      "columns": {
        "sessionToken": {
          "name": "sessionToken",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
=======
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.invoice_options": {
      "name": "invoice_options",
      "schema": "",
      "columns": {
        "invoiceId": {
          "name": "invoiceId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "optionId": {
          "name": "optionId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
>>>>>>> Stashed changes
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "session_userId_user_id_fk": {
          "name": "session_userId_user_id_fk",
          "tableFrom": "session",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
=======
        "invoice_options_invoiceId_invoice_id_fk": {
          "name": "invoice_options_invoiceId_invoice_id_fk",
          "tableFrom": "invoice_options",
          "tableTo": "invoice",
          "columnsFrom": [
            "invoiceId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "invoice_options_optionId_options_id_fk": {
          "name": "invoice_options_optionId_options_id_fk",
          "tableFrom": "invoice_options",
          "tableTo": "options",
          "columnsFrom": [
            "optionId"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.user": {
      "name": "user",
=======
    "public.job": {
      "name": "job",
>>>>>>> Stashed changes
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
<<<<<<< Updated upstream
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "emailVerified": {
          "name": "emailVerified",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "stripeId": {
          "name": "stripeId",
=======
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.newsletter": {
      "name": "newsletter",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "redactor": {
          "name": "redactor",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "images": {
          "name": "images",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "title": {
          "name": "title",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "address": {
          "name": "address",
=======
        "content": {
          "name": "content",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "plan": {
          "name": "plan",
          "type": "plan",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'NONE'"
        },
        "isPro": {
          "name": "isPro",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "isAdmin": {
          "name": "isAdmin",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "locked": {
          "name": "locked",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "lang": {
          "name": "lang",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'fr'"
        },
=======
>>>>>>> Stashed changes
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
<<<<<<< Updated upstream
          "default": "'2024-09-11 07:42:14.502'"
        },
        "updateAt": {
          "name": "updateAt",
=======
          "default": "'2024-09-24 17:21:43.666'"
        },
        "updatedAt": {
          "name": "updatedAt",
>>>>>>> Stashed changes
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "user_address_address_id_fk": {
          "name": "user_address_address_id_fk",
          "tableFrom": "user",
          "tableTo": "address",
          "columnsFrom": [
            "address"
=======
        "newsletter_redactor_company_id_fk": {
          "name": "newsletter_redactor_company_id_fk",
          "tableFrom": "newsletter",
          "tableTo": "company",
          "columnsFrom": [
            "redactor"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
<<<<<<< Updated upstream
      "uniqueConstraints": {
        "user_email_unique": {
          "name": "user_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      }
    },
    "public.verificationToken": {
      "name": "verificationToken",
      "schema": "",
      "columns": {
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {
        "verificationToken_identifier_token_pk": {
          "name": "verificationToken_identifier_token_pk",
          "columns": [
            "identifier",
            "token"
          ]
        }
      },
      "uniqueConstraints": {}
    },
    "public.intolerences": {
      "name": "intolerences",
=======
      "uniqueConstraints": {}
    },
    "public.notification": {
      "name": "notification",
>>>>>>> Stashed changes
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
<<<<<<< Updated upstream
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ownerId": {
          "name": "ownerId",
=======
          "notNull": true
        },
        "notificationType": {
          "name": "notificationType",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "userId": {
          "name": "userId",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "'2024-09-11 07:42:14.497'"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
=======
        "new": {
          "name": "new",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "text",
          "primaryKey": false,
          "notNull": true
>>>>>>> Stashed changes
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "intolerences_ownerId_user_id_fk": {
          "name": "intolerences_ownerId_user_id_fk",
          "tableFrom": "intolerences",
          "tableTo": "user",
          "columnsFrom": [
            "ownerId"
=======
        "notification_userId_user_id_fk": {
          "name": "notification_userId_user_id_fk",
          "tableFrom": "notification",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.invoice": {
      "name": "invoice",
=======
    "public.observations": {
      "name": "observations",
>>>>>>> Stashed changes
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
<<<<<<< Updated upstream
        "askEstimateId": {
          "name": "askEstimateId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "total": {
          "name": "total",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
=======
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
>>>>>>> Stashed changes
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
<<<<<<< Updated upstream
          "notNull": true,
          "default": "'2024-09-11 07:42:14.469'"
=======
          "notNull": false,
          "default": "'2024-09-24 17:21:43.742'"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
<<<<<<< Updated upstream
      "foreignKeys": {
        "invoice_askEstimateId_ask_estimate_id_fk": {
          "name": "invoice_askEstimateId_ask_estimate_id_fk",
          "tableFrom": "invoice",
          "tableTo": "ask_estimate",
          "columnsFrom": [
            "askEstimateId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.newsletter": {
      "name": "newsletter",
=======
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.options": {
      "name": "options",
>>>>>>> Stashed changes
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
<<<<<<< Updated upstream
        "redactor": {
          "name": "redactor",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "images": {
          "name": "images",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "content": {
          "name": "content",
=======
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "price": {
          "name": "price",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "companyId": {
          "name": "companyId",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
<<<<<<< Updated upstream
          "notNull": false,
          "default": "'2024-09-11 07:42:14.463'"
=======
          "notNull": true,
          "default": "'2024-09-24 17:21:43.684'"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "newsletter_redactor_company_id_fk": {
          "name": "newsletter_redactor_company_id_fk",
          "tableFrom": "newsletter",
          "tableTo": "company",
          "columnsFrom": [
            "redactor"
=======
        "options_companyId_company_id_fk": {
          "name": "options_companyId_company_id_fk",
          "tableFrom": "options",
          "tableTo": "company",
          "columnsFrom": [
            "companyId"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.pets": {
      "name": "pets",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "petType",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'Dog'"
        },
        "weight": {
          "name": "weight",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "height": {
          "name": "height",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ownerId": {
          "name": "ownerId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "nacType": {
          "name": "nacType",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "birthDate": {
          "name": "birthDate",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "furColor": {
          "name": "furColor",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "eyeColor": {
          "name": "eyeColor",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "pets_ownerId_user_id_fk": {
          "name": "pets_ownerId_user_id_fk",
          "tableFrom": "pets",
          "tableTo": "user",
          "columnsFrom": [
            "ownerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.pro_session": {
      "name": "pro_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "proId": {
          "name": "proId",
=======
    "public.pets_allergies": {
      "name": "pets_allergies",
      "schema": "",
      "columns": {
        "petId": {
          "name": "petId",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "clientId": {
          "name": "clientId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "reportId": {
          "name": "reportId",
          "type": "text",
=======
        "allergyId": {
          "name": "allergyId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "pets_allergies_petId_pets_id_fk": {
          "name": "pets_allergies_petId_pets_id_fk",
          "tableFrom": "pets_allergies",
          "tableTo": "pets",
          "columnsFrom": [
            "petId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "pets_allergies_allergyId_allergies_id_fk": {
          "name": "pets_allergies_allergyId_allergies_id_fk",
          "tableFrom": "pets_allergies",
          "tableTo": "allergies",
          "columnsFrom": [
            "allergyId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.pets_deseases": {
      "name": "pets_deseases",
      "schema": "",
      "columns": {
        "petId": {
          "name": "petId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "deseaseId": {
          "name": "deseaseId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "pets_deseases_petId_pets_id_fk": {
          "name": "pets_deseases_petId_pets_id_fk",
          "tableFrom": "pets_deseases",
          "tableTo": "pets",
          "columnsFrom": [
            "petId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "pets_deseases_deseaseId_deseases_id_fk": {
          "name": "pets_deseases_deseaseId_deseases_id_fk",
          "tableFrom": "pets_deseases",
          "tableTo": "deseases",
          "columnsFrom": [
            "deseaseId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.pets_intolerences": {
      "name": "pets_intolerences",
      "schema": "",
      "columns": {
        "petId": {
          "name": "petId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "intolerenceId": {
          "name": "intolerenceId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "pets_intolerences_petId_pets_id_fk": {
          "name": "pets_intolerences_petId_pets_id_fk",
          "tableFrom": "pets_intolerences",
          "tableTo": "pets",
          "columnsFrom": [
            "petId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "pets_intolerences_intolerenceId_intolerences_id_fk": {
          "name": "pets_intolerences_intolerenceId_intolerences_id_fk",
          "tableFrom": "pets_intolerences",
          "tableTo": "intolerences",
          "columnsFrom": [
            "intolerenceId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.pro_session": {
      "name": "pro_session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "proId": {
          "name": "proId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "clientId": {
          "name": "clientId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "reportId": {
          "name": "reportId",
          "type": "text",
>>>>>>> Stashed changes
          "primaryKey": false,
          "notNull": false
        },
        "observationId": {
          "name": "observationId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
=======
        "serviceId": {
          "name": "serviceId",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
>>>>>>> Stashed changes
        "beginAt": {
          "name": "beginAt",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "endAt": {
          "name": "endAt",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "session_status_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'COMPANY PENDING'"
        },
        "atHome": {
          "name": "atHome",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "type": {
          "name": "type",
          "type": "session_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'oneToOne'"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
<<<<<<< Updated upstream
          "default": "'2024-09-11 07:42:14.491'"
=======
          "default": "'2024-09-24 17:21:43.742'"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "pro_session_proId_company_id_fk": {
          "name": "pro_session_proId_company_id_fk",
          "tableFrom": "pro_session",
          "tableTo": "company",
          "columnsFrom": [
            "proId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "pro_session_clientId_pets_id_fk": {
          "name": "pro_session_clientId_pets_id_fk",
          "tableFrom": "pro_session",
          "tableTo": "pets",
          "columnsFrom": [
            "clientId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "pro_session_reportId_report_id_fk": {
          "name": "pro_session_reportId_report_id_fk",
          "tableFrom": "pro_session",
          "tableTo": "report",
          "columnsFrom": [
            "reportId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "pro_session_observationId_observations_id_fk": {
          "name": "pro_session_observationId_observations_id_fk",
          "tableFrom": "pro_session",
          "tableTo": "observations",
          "columnsFrom": [
            "observationId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
<<<<<<< Updated upstream
=======
        },
        "pro_session_serviceId_service_id_fk": {
          "name": "pro_session_serviceId_service_id_fk",
          "tableFrom": "pro_session",
          "tableTo": "service",
          "columnsFrom": [
            "serviceId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
>>>>>>> Stashed changes
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.project": {
      "name": "project",
=======
    "public.product": {
      "name": "product",
>>>>>>> Stashed changes
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
<<<<<<< Updated upstream
        "ownerId": {
          "name": "ownerId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "color": {
          "name": "color",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "location": {
          "name": "location",
=======
        "description": {
          "name": "description",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "beginAt": {
          "name": "beginAt",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "endAt": {
          "name": "endAt",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "isImportant": {
          "name": "isImportant",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "note": {
          "name": "note",
=======
        "quantity": {
          "name": "quantity",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "companyId": {
          "name": "companyId",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "link": {
          "name": "link",
          "type": "text",
          "primaryKey": false,
          "notNull": false
=======
        "unitPrice": {
          "name": "unitPrice",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
>>>>>>> Stashed changes
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
<<<<<<< Updated upstream
          "default": "'2024-09-11 07:42:14.478'"
=======
          "default": "'2024-09-24 17:21:43.696'"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "project_ownerId_company_id_fk": {
          "name": "project_ownerId_company_id_fk",
          "tableFrom": "project",
          "tableTo": "company",
          "columnsFrom": [
            "ownerId"
=======
        "product_companyId_company_id_fk": {
          "name": "product_companyId_company_id_fk",
          "tableFrom": "product",
          "tableTo": "company",
          "columnsFrom": [
            "companyId"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.ratings": {
      "name": "ratings",
=======
    "public.progression": {
      "name": "progression",
>>>>>>> Stashed changes
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
<<<<<<< Updated upstream
        "rate": {
          "name": "rate",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "comment": {
          "name": "comment",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "proId": {
          "name": "proId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "writerId": {
          "name": "writerId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "isRecommanded": {
          "name": "isRecommanded",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "'2024-09-11 07:42:14.479'"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "ratings_proId_company_id_fk": {
          "name": "ratings_proId_company_id_fk",
          "tableFrom": "ratings",
          "tableTo": "company",
          "columnsFrom": [
            "proId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "ratings_writerId_user_id_fk": {
          "name": "ratings_writerId_user_id_fk",
          "tableFrom": "ratings",
          "tableTo": "user",
          "columnsFrom": [
            "writerId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.service": {
      "name": "service",
=======
        "docs": {
          "name": "docs",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "cancelPolicies": {
          "name": "cancelPolicies",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "reminders": {
          "name": "reminders",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "services": {
          "name": "services",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.project": {
      "name": "project",
>>>>>>> Stashed changes
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
<<<<<<< Updated upstream
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
=======
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "ownerId": {
          "name": "ownerId",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "description": {
          "name": "description",
=======
        "color": {
          "name": "color",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "price": {
          "name": "price",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "proId": {
          "name": "proId",
=======
        "location": {
          "name": "location",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "beginAt": {
          "name": "beginAt",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "endAt": {
          "name": "endAt",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "isImportant": {
          "name": "isImportant",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "note": {
          "name": "note",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "duration": {
          "name": "duration",
          "type": "integer",
=======
        "link": {
          "name": "link",
          "type": "text",
>>>>>>> Stashed changes
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
<<<<<<< Updated upstream
          "default": "'2024-09-11 07:42:14.480'"
=======
          "default": "'2024-09-24 17:21:43.704'"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "service_proId_company_id_fk": {
          "name": "service_proId_company_id_fk",
          "tableFrom": "service",
          "tableTo": "company",
          "columnsFrom": [
            "proId"
=======
        "project_ownerId_company_id_fk": {
          "name": "project_ownerId_company_id_fk",
          "tableFrom": "project",
          "tableTo": "company",
          "columnsFrom": [
            "ownerId"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.task": {
      "name": "task",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "ownerId": {
          "name": "ownerId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "color": {
          "name": "color",
=======
    "public.projects_invitees": {
      "name": "projects_invitees",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "projectId": {
          "name": "projectId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "projects_invitees_userId_user_id_fk": {
          "name": "projects_invitees_userId_user_id_fk",
          "tableFrom": "projects_invitees",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "projects_invitees_projectId_project_id_fk": {
          "name": "projects_invitees_projectId_project_id_fk",
          "tableFrom": "projects_invitees",
          "tableTo": "project",
          "columnsFrom": [
            "projectId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.ratings": {
      "name": "ratings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "rate": {
          "name": "rate",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "comment": {
          "name": "comment",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "location": {
          "name": "location",
=======
        "proId": {
          "name": "proId",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "beginAt": {
          "name": "beginAt",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "endAt": {
          "name": "endAt",
          "type": "date",
          "primaryKey": false,
          "notNull": false
=======
        "writerId": {
          "name": "writerId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "isRecommanded": {
          "name": "isRecommanded",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
>>>>>>> Stashed changes
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
<<<<<<< Updated upstream
          "default": "'2024-09-11 07:42:14.481'"
=======
          "default": "'2024-09-24 17:21:43.707'"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "task_ownerId_company_id_fk": {
          "name": "task_ownerId_company_id_fk",
          "tableFrom": "task",
          "tableTo": "company",
          "columnsFrom": [
            "ownerId"
=======
        "ratings_proId_company_id_fk": {
          "name": "ratings_proId_company_id_fk",
          "tableFrom": "ratings",
          "tableTo": "company",
          "columnsFrom": [
            "proId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "ratings_writerId_user_id_fk": {
          "name": "ratings_writerId_user_id_fk",
          "tableFrom": "ratings",
          "tableTo": "user",
          "columnsFrom": [
            "writerId"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.users_newsletters": {
      "name": "users_newsletters",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
=======
    "public.receipt_category": {
      "name": "receipt_category",
      "schema": "",
      "columns": {
        "receiptId": {
          "name": "receiptId",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "newsletterId": {
          "name": "newsletterId",
=======
        "categoryId": {
          "name": "categoryId",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "users_newsletters_userId_user_id_fk": {
          "name": "users_newsletters_userId_user_id_fk",
          "tableFrom": "users_newsletters",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
=======
        "receipt_category_receiptId_receipt_id_fk": {
          "name": "receipt_category_receiptId_receipt_id_fk",
          "tableFrom": "receipt_category",
          "tableTo": "receipt",
          "columnsFrom": [
            "receiptId"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
<<<<<<< Updated upstream
        "users_newsletters_newsletterId_newsletter_id_fk": {
          "name": "users_newsletters_newsletterId_newsletter_id_fk",
          "tableFrom": "users_newsletters",
          "tableTo": "newsletter",
          "columnsFrom": [
            "newsletterId"
=======
        "receipt_category_categoryId_category_id_fk": {
          "name": "receipt_category_categoryId_category_id_fk",
          "tableFrom": "receipt_category",
          "tableTo": "category",
          "columnsFrom": [
            "categoryId"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.invoice_options": {
      "name": "invoice_options",
      "schema": "",
      "columns": {
        "invoiceId": {
          "name": "invoiceId",
=======
    "public.receipt_product": {
      "name": "receipt_product",
      "schema": "",
      "columns": {
        "receiptId": {
          "name": "receiptId",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "optionId": {
          "name": "optionId",
=======
        "productId": {
          "name": "productId",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "invoice_options_invoiceId_invoice_id_fk": {
          "name": "invoice_options_invoiceId_invoice_id_fk",
          "tableFrom": "invoice_options",
          "tableTo": "invoice",
          "columnsFrom": [
            "invoiceId"
=======
        "receipt_product_receiptId_receipt_id_fk": {
          "name": "receipt_product_receiptId_receipt_id_fk",
          "tableFrom": "receipt_product",
          "tableTo": "receipt",
          "columnsFrom": [
            "receiptId"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
<<<<<<< Updated upstream
        "invoice_options_optionId_options_id_fk": {
          "name": "invoice_options_optionId_options_id_fk",
          "tableFrom": "invoice_options",
          "tableTo": "options",
          "columnsFrom": [
            "optionId"
=======
        "receipt_product_productId_product_id_fk": {
          "name": "receipt_product_productId_product_id_fk",
          "tableFrom": "receipt_product",
          "tableTo": "product",
          "columnsFrom": [
            "productId"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.options": {
      "name": "options",
=======
    "public.receipt": {
      "name": "receipt",
>>>>>>> Stashed changes
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
<<<<<<< Updated upstream
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
=======
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "companyId": {
          "name": "companyId",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "price": {
          "name": "price",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "companyId": {
          "name": "companyId",
          "type": "text",
          "primaryKey": false,
=======
        "totalPrice": {
          "name": "totalPrice",
          "type": "integer",
          "primaryKey": false,
>>>>>>> Stashed changes
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
<<<<<<< Updated upstream
          "notNull": true,
          "default": "'2024-09-11 07:42:14.471'"
=======
          "notNull": false,
          "default": "'2024-09-24 17:21:43.696'"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "options_companyId_company_id_fk": {
          "name": "options_companyId_company_id_fk",
          "tableFrom": "options",
=======
        "receipt_companyId_company_id_fk": {
          "name": "receipt_companyId_company_id_fk",
          "tableFrom": "receipt",
>>>>>>> Stashed changes
          "tableTo": "company",
          "columnsFrom": [
            "companyId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.progression": {
      "name": "progression",
=======
    "public.report_template": {
      "name": "report_template",
>>>>>>> Stashed changes
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
<<<<<<< Updated upstream
        "docs": {
          "name": "docs",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "cancelPolicies": {
          "name": "cancelPolicies",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "reminders": {
          "name": "reminders",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "services": {
          "name": "services",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.projects_invitees": {
      "name": "projects_invitees",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "projectId": {
          "name": "projectId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "projects_invitees_userId_user_id_fk": {
          "name": "projects_invitees_userId_user_id_fk",
          "tableFrom": "projects_invitees",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "projects_invitees_projectId_project_id_fk": {
          "name": "projects_invitees_projectId_project_id_fk",
          "tableFrom": "projects_invitees",
          "tableTo": "project",
          "columnsFrom": [
            "projectId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.session_options": {
      "name": "session_options",
      "schema": "",
      "columns": {
        "sessionId": {
          "name": "sessionId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "optionId": {
          "name": "optionId",
          "type": "text",
=======
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "owner_id": {
          "name": "owner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
>>>>>>> Stashed changes
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "session_options_sessionId_pro_session_id_fk": {
          "name": "session_options_sessionId_pro_session_id_fk",
          "tableFrom": "session_options",
          "tableTo": "pro_session",
          "columnsFrom": [
            "sessionId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "session_options_optionId_options_id_fk": {
          "name": "session_options_optionId_options_id_fk",
          "tableFrom": "session_options",
          "tableTo": "options",
          "columnsFrom": [
            "optionId"
=======
        "report_template_owner_id_user_id_fk": {
          "name": "report_template_owner_id_user_id_fk",
          "tableFrom": "report_template",
          "tableTo": "user",
          "columnsFrom": [
            "owner_id"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.report": {
      "name": "report",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "reportTemplateId": {
          "name": "reportTemplateId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
<<<<<<< Updated upstream
          "default": "'2024-09-11 07:42:14.485'"
=======
          "default": "now()"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "report_reportTemplateId_report_template_id_fk": {
          "name": "report_reportTemplateId_report_template_id_fk",
          "tableFrom": "report",
          "tableTo": "report_template",
          "columnsFrom": [
            "reportTemplateId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.observations": {
      "name": "observations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "'2024-09-11 07:42:14.491'"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
=======
>>>>>>> Stashed changes
    "public.report_topic": {
      "name": "report_topic",
      "schema": "",
      "columns": {
        "reportId": {
          "name": "reportId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "topicId": {
          "name": "topicId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "report_topic_reportId_report_id_fk": {
          "name": "report_topic_reportId_report_id_fk",
          "tableFrom": "report_topic",
          "tableTo": "report",
          "columnsFrom": [
            "reportId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "report_topic_topicId_topic_id_fk": {
          "name": "report_topic_topicId_topic_id_fk",
          "tableFrom": "report_topic",
          "tableTo": "topic",
          "columnsFrom": [
            "topicId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.receipt": {
      "name": "receipt",
=======
    "public.service": {
      "name": "service",
>>>>>>> Stashed changes
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "companyId": {
          "name": "companyId",
=======
        "name": {
          "name": "name",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "totalPrice": {
          "name": "totalPrice",
=======
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "price": {
          "name": "price",
>>>>>>> Stashed changes
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "'2024-09-11 07:42:14.475'"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "receipt_companyId_company_id_fk": {
          "name": "receipt_companyId_company_id_fk",
          "tableFrom": "receipt",
          "tableTo": "company",
          "columnsFrom": [
            "companyId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.receipt_product": {
      "name": "receipt_product",
      "schema": "",
      "columns": {
        "receiptId": {
          "name": "receiptId",
=======
        "proId": {
          "name": "proId",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "productId": {
          "name": "productId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "receipt_product_receiptId_receipt_id_fk": {
          "name": "receipt_product_receiptId_receipt_id_fk",
          "tableFrom": "receipt_product",
          "tableTo": "receipt",
          "columnsFrom": [
            "receiptId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "receipt_product_productId_product_id_fk": {
          "name": "receipt_product_productId_product_id_fk",
          "tableFrom": "receipt_product",
          "tableTo": "product",
          "columnsFrom": [
            "productId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.topic": {
      "name": "topic",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "companyId": {
          "name": "companyId",
          "type": "text",
=======
        "duration": {
          "name": "duration",
          "type": "integer",
>>>>>>> Stashed changes
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
<<<<<<< Updated upstream
          "default": "'2024-09-11 07:42:14.485'"
=======
          "default": "now()"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "topic_companyId_company_id_fk": {
          "name": "topic_companyId_company_id_fk",
          "tableFrom": "topic",
          "tableTo": "company",
          "columnsFrom": [
            "companyId"
=======
        "service_proId_company_id_fk": {
          "name": "service_proId_company_id_fk",
          "tableFrom": "service",
          "tableTo": "company",
          "columnsFrom": [
            "proId"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.job": {
      "name": "job",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
=======
    "public.session": {
      "name": "session",
      "schema": "",
      "columns": {
        "sessionToken": {
          "name": "sessionToken",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
<<<<<<< Updated upstream
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.users_jobs": {
      "name": "users_jobs",
      "schema": "",
      "columns": {
=======
>>>>>>> Stashed changes
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
<<<<<<< Updated upstream
          "notNull": false
        },
        "jobId": {
          "name": "jobId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
=======
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
>>>>>>> Stashed changes
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "users_jobs_userId_user_id_fk": {
          "name": "users_jobs_userId_user_id_fk",
          "tableFrom": "users_jobs",
=======
        "session_userId_user_id_fk": {
          "name": "session_userId_user_id_fk",
          "tableFrom": "session",
>>>>>>> Stashed changes
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
<<<<<<< Updated upstream
        },
        "users_jobs_jobId_job_id_fk": {
          "name": "users_jobs_jobId_job_id_fk",
          "tableFrom": "users_jobs",
          "tableTo": "job",
          "columnsFrom": [
            "jobId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
=======
>>>>>>> Stashed changes
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.receip_category": {
      "name": "receip_category",
      "schema": "",
      "columns": {
        "receiptId": {
          "name": "receiptId",
=======
    "public.session_options": {
      "name": "session_options",
      "schema": "",
      "columns": {
        "sessionId": {
          "name": "sessionId",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "categoryId": {
          "name": "categoryId",
=======
        "optionId": {
          "name": "optionId",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "receip_category_receiptId_receipt_id_fk": {
          "name": "receip_category_receiptId_receipt_id_fk",
          "tableFrom": "receip_category",
          "tableTo": "receipt",
          "columnsFrom": [
            "receiptId"
=======
        "session_options_sessionId_pro_session_id_fk": {
          "name": "session_options_sessionId_pro_session_id_fk",
          "tableFrom": "session_options",
          "tableTo": "pro_session",
          "columnsFrom": [
            "sessionId"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
<<<<<<< Updated upstream
        "receip_category_categoryId_category_id_fk": {
          "name": "receip_category_categoryId_category_id_fk",
          "tableFrom": "receip_category",
          "tableTo": "category",
          "columnsFrom": [
            "categoryId"
=======
        "session_options_optionId_options_id_fk": {
          "name": "session_options_optionId_options_id_fk",
          "tableFrom": "session_options",
          "tableTo": "options",
          "columnsFrom": [
            "optionId"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.pets_allergies": {
      "name": "pets_allergies",
      "schema": "",
      "columns": {
        "petId": {
          "name": "petId",
=======
    "public.task": {
      "name": "task",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "ownerId": {
          "name": "ownerId",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "allergyId": {
          "name": "allergyId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "pets_allergies_petId_pets_id_fk": {
          "name": "pets_allergies_petId_pets_id_fk",
          "tableFrom": "pets_allergies",
          "tableTo": "pets",
          "columnsFrom": [
            "petId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "pets_allergies_allergyId_allergies_id_fk": {
          "name": "pets_allergies_allergyId_allergies_id_fk",
          "tableFrom": "pets_allergies",
          "tableTo": "allergies",
          "columnsFrom": [
            "allergyId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.pets_deseases": {
      "name": "pets_deseases",
      "schema": "",
      "columns": {
        "petId": {
          "name": "petId",
=======
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "color": {
          "name": "color",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "deseaseId": {
          "name": "deseaseId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
=======
        "location": {
          "name": "location",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "beginAt": {
          "name": "beginAt",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "endAt": {
          "name": "endAt",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "'2024-09-24 17:21:43.714'"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
>>>>>>> Stashed changes
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "pets_deseases_petId_pets_id_fk": {
          "name": "pets_deseases_petId_pets_id_fk",
          "tableFrom": "pets_deseases",
          "tableTo": "pets",
          "columnsFrom": [
            "petId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "pets_deseases_deseaseId_deseases_id_fk": {
          "name": "pets_deseases_deseaseId_deseases_id_fk",
          "tableFrom": "pets_deseases",
          "tableTo": "deseases",
          "columnsFrom": [
            "deseaseId"
=======
        "task_ownerId_company_id_fk": {
          "name": "task_ownerId_company_id_fk",
          "tableFrom": "task",
          "tableTo": "company",
          "columnsFrom": [
            "ownerId"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.pets_intolerences": {
      "name": "pets_intolerences",
      "schema": "",
      "columns": {
        "petId": {
          "name": "petId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "intolerenceId": {
          "name": "intolerenceId",
          "type": "text",
          "primaryKey": false,
=======
    "public.topic": {
      "name": "topic",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "companyId": {
          "name": "companyId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "'2024-09-24 17:21:43.725'"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
>>>>>>> Stashed changes
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "pets_intolerences_petId_pets_id_fk": {
          "name": "pets_intolerences_petId_pets_id_fk",
          "tableFrom": "pets_intolerences",
          "tableTo": "pets",
          "columnsFrom": [
            "petId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "pets_intolerences_intolerenceId_intolerences_id_fk": {
          "name": "pets_intolerences_intolerenceId_intolerences_id_fk",
          "tableFrom": "pets_intolerences",
          "tableTo": "intolerences",
          "columnsFrom": [
            "intolerenceId"
=======
        "topic_companyId_company_id_fk": {
          "name": "topic_companyId_company_id_fk",
          "tableFrom": "topic",
          "tableTo": "company",
          "columnsFrom": [
            "companyId"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.transaction": {
      "name": "transaction",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "from": {
          "name": "from",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "to": {
          "name": "to",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
<<<<<<< Updated upstream
          "default": "'2024-09-11 07:42:14.508'"
=======
          "default": "'2024-09-24 17:21:43.730'"
>>>>>>> Stashed changes
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "transaction_from_user_id_fk": {
          "name": "transaction_from_user_id_fk",
          "tableFrom": "transaction",
          "tableTo": "user",
          "columnsFrom": [
            "from"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "transaction_to_company_id_fk": {
          "name": "transaction_to_company_id_fk",
          "tableFrom": "transaction",
          "tableTo": "company",
          "columnsFrom": [
            "to"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.widgets": {
      "name": "widgets",
=======
    "public.user": {
      "name": "user",
>>>>>>> Stashed changes
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
<<<<<<< Updated upstream
        "width": {
          "name": "width",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "height": {
          "name": "height",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "widgetsOrientation",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'Horizontal'"
        },
        "companyId": {
          "name": "companyId",
=======
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "emailVerified": {
          "name": "emailVerified",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "stripeId": {
          "name": "stripeId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "isPro": {
          "name": "isPro",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "isAdmin": {
          "name": "isAdmin",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "locked": {
          "name": "locked",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "lang": {
          "name": "lang",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'fr'"
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "'2024-09-24 17:21:43.768'"
        },
        "updateAt": {
          "name": "updateAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_address_address_id_fk": {
          "name": "user_address_address_id_fk",
          "tableFrom": "user",
          "tableTo": "address",
          "columnsFrom": [
            "address"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_email_unique": {
          "name": "user_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      }
    },
    "public.users_jobs": {
      "name": "users_jobs",
      "schema": "",
      "columns": {
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "jobId": {
          "name": "jobId",
>>>>>>> Stashed changes
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "widgets_companyId_company_id_fk": {
          "name": "widgets_companyId_company_id_fk",
          "tableFrom": "widgets",
          "tableTo": "company",
          "columnsFrom": [
            "companyId"
=======
        "users_jobs_userId_user_id_fk": {
          "name": "users_jobs_userId_user_id_fk",
          "tableFrom": "users_jobs",
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "users_jobs_jobId_job_id_fk": {
          "name": "users_jobs_jobId_job_id_fk",
          "tableFrom": "users_jobs",
          "tableTo": "job",
          "columnsFrom": [
            "jobId"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.notification": {
      "name": "notification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "notificationType": {
          "name": "notificationType",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
=======
    "public.users_newsletters": {
      "name": "users_newsletters",
      "schema": "",
      "columns": {
>>>>>>> Stashed changes
        "userId": {
          "name": "userId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
<<<<<<< Updated upstream
        "new": {
          "name": "new",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "text",
          "primaryKey": false,
          "notNull": true
=======
        "newsletterId": {
          "name": "newsletterId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
>>>>>>> Stashed changes
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "notification_userId_user_id_fk": {
          "name": "notification_userId_user_id_fk",
          "tableFrom": "notification",
=======
        "users_newsletters_userId_user_id_fk": {
          "name": "users_newsletters_userId_user_id_fk",
          "tableFrom": "users_newsletters",
>>>>>>> Stashed changes
          "tableTo": "user",
          "columnsFrom": [
            "userId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
<<<<<<< Updated upstream
=======
        },
        "users_newsletters_newsletterId_newsletter_id_fk": {
          "name": "users_newsletters_newsletterId_newsletter_id_fk",
          "tableFrom": "users_newsletters",
          "tableTo": "newsletter",
          "columnsFrom": [
            "newsletterId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
>>>>>>> Stashed changes
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
<<<<<<< Updated upstream
    "public.product": {
      "name": "product",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "quantity": {
          "name": "quantity",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "companyId": {
          "name": "companyId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "unitPrice": {
          "name": "unitPrice",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "createdAt": {
          "name": "createdAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "'2024-09-11 07:42:14.475'"
        },
        "updatedAt": {
          "name": "updatedAt",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "product_companyId_company_id_fk": {
          "name": "product_companyId_company_id_fk",
          "tableFrom": "product",
          "tableTo": "company",
          "columnsFrom": [
            "companyId"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    },
    "public.report_template": {
      "name": "report_template",
=======
    "public.verificationToken": {
      "name": "verificationToken",
      "schema": "",
      "columns": {
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires": {
          "name": "expires",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {
        "verificationToken_identifier_token_pk": {
          "name": "verificationToken_identifier_token_pk",
          "columns": [
            "identifier",
            "token"
          ]
        }
      },
      "uniqueConstraints": {}
    },
    "public.widgets": {
      "name": "widgets",
>>>>>>> Stashed changes
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
<<<<<<< Updated upstream
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "owner_id": {
          "name": "owner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
=======
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "width": {
          "name": "width",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "height": {
          "name": "height",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "widgetsOrientation",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'Horizontal'"
        },
        "companyId": {
          "name": "companyId",
          "type": "text",
          "primaryKey": false,
          "notNull": false
>>>>>>> Stashed changes
        }
      },
      "indexes": {},
      "foreignKeys": {
<<<<<<< Updated upstream
        "report_template_owner_id_user_id_fk": {
          "name": "report_template_owner_id_user_id_fk",
          "tableFrom": "report_template",
          "tableTo": "user",
          "columnsFrom": [
            "owner_id"
=======
        "widgets_companyId_company_id_fk": {
          "name": "widgets_companyId_company_id_fk",
          "tableFrom": "widgets",
          "tableTo": "company",
          "columnsFrom": [
            "companyId"
>>>>>>> Stashed changes
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {}
    }
  },
  "enums": {
    "public.askEstimateStatus": {
      "name": "askEstimateStatus",
      "schema": "public",
      "values": [
        "USER PENDING",
        "USER ACCEPTED",
        "REJECTED BY USER",
        "CANCELED BY USER",
        "USER PAYED",
        "COMPANY PENDING",
        "COMPANY ACCEPTED",
        "REJECTED BY COMPANY",
        "POSTPONED BY COMPANY",
        "CANCELED BY COMPANY"
      ]
    },
    "public.jobStatus": {
      "name": "jobStatus",
      "schema": "public",
      "values": [
        "pending",
        "in_progress",
        "completed",
        "failed"
      ]
    },
    "public.jobType": {
      "name": "jobType",
      "schema": "public",
      "values": [
        "reminder",
        "newsletter",
        "payout",
        "refund",
        "none"
      ]
    },
<<<<<<< Updated upstream
=======
    "public.company_membership_role": {
      "name": "company_membership_role",
      "schema": "public",
      "values": [
        "NONE",
        "MEMBER",
        "OWNER",
        "ADMIN"
      ]
    },
>>>>>>> Stashed changes
    "public.plan": {
      "name": "plan",
      "schema": "public",
      "values": [
        "BASIC",
        "PREMIUM",
        "ULTIMATE",
        "NONE"
      ]
    },
<<<<<<< Updated upstream
=======
    "public.notificationType": {
      "name": "notificationType",
      "schema": "public",
      "values": [
        "rate",
        "newClient",
        "newReport",
        "newAskReservation"
      ]
    },
>>>>>>> Stashed changes
    "public.petType": {
      "name": "petType",
      "schema": "public",
      "values": [
        "Dog",
        "Cat",
        "Bird",
        "Horse",
        "NAC"
      ]
    },
    "public.session_status_type": {
      "name": "session_status_type",
      "schema": "public",
      "values": [
        "CLIENT PAYED",
        "CLIENT PENDING",
        "CLIENT CANCELED",
        "CLIENT ACCEPTED",
        "COMPANY PENDING",
        "COMPANY ACCEPTED",
        "COMPANY CANCELED",
        "COMPANY POSTPONED"
      ]
    },
    "public.session_type": {
      "name": "session_type",
      "schema": "public",
      "values": [
        "oneToOne",
        "multiple"
      ]
    },
    "public.widgetsOrientation": {
      "name": "widgetsOrientation",
      "schema": "public",
      "values": [
        "Horizontal",
        "Vertical"
      ]
    },
    "public.widgetsType": {
      "name": "widgetsType",
      "schema": "public",
      "values": [
        "Square",
        "Rectangle"
      ]
<<<<<<< Updated upstream
    },
    "public.notificationType": {
      "name": "notificationType",
      "schema": "public",
      "values": [
        "rate",
        "newClient",
        "newReport",
        "newAskReservation"
      ]
=======
>>>>>>> Stashed changes
    }
  },
  "schemas": {},
  "sequences": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}